{
  "hash": "31882c64b3cce446b0e136d931e5461a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: Clean Date\n---\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lubridate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'lubridate'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n## Format Date\n\nFormat date to `date` class.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfmt_date_custom <- function(x) {\n    out <- if (inherits(x, \"POSIXt\")) {\n        lubridate::as_date(x)\n    } else if (is.character(x)) {\n        dmy(x)\n    } else {\n        NA\n    }\n    out\n}\n```\n:::\n\n\n\n\n\n\n**Example:**\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfmt_date_custom(\"01/01/2020\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"2020-01-01\"\n```\n\n\n:::\n\n```{.r .cell-code}\nfmt_date_custom(Sys.Date())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] NA\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Time Interval\n\n### Using `time_length()`\n\nTo convert a `difftime` object to **month** or **year intervals**, you can use the `lubridate` package, which provides functions like `time_length()` and `as.period()` for handling time intervals.\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(lubridate)\n\n# Create difftime object\nstart_date <- dmy(\"12/11/2001\")\nend_date <- dmy(\"12/12/2003\")\ntime_diff <- end_date - start_date\n\n# Convert to months\nmonths_diff <- time_length(as.duration(time_diff), \"months\")\n\n# Convert to years\nyears_diff <- time_length(as.duration(time_diff), \"years\")\n\n# Print the results\nprint(paste(\"Months:\", months_diff))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Months: 24.9691991786448\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Years:\", years_diff))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Years: 2.0807665982204\"\n```\n\n\n:::\n:::\n\n\n\n\n\n\n**Explanation:**\n\n1. **`time_length()`**:\n   - Converts a `duration` object into the specified unit (e.g., months, years).\n   \n2. **`as.duration(time_diff)`**:\n   - Converts the `difftime` object into a `duration` object, which is required by `time_length()`.\n\n3. **Units**:\n   - `\"months\"`: Converts the interval into months, assuming an average month length of ~30.44 days.\n   - `\"years\"`: Converts the interval into years, assuming 365.25 days per year.\n\n\n### Using `interval()` \n\n\nIf you need to calculate **exact calendar intervals** (e.g., the number of full months or years between two dates), use `interval` and `int_length`:\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Exact calendar months\nmonths_diff_exact <- interval(start_date, end_date) %/% months(1)\n\n# Exact calendar years\nyears_diff_exact <- interval(start_date, end_date) %/% years(1)\n\n# Print the results\nprint(paste(\"Exact months:\", months_diff_exact))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Exact months: 25\"\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(paste(\"Exact years:\", years_diff_exact))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Exact years: 2\"\n```\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}